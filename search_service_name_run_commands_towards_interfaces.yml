---
- name: Check VRF services and run commands on specific interfaces
  hosts: localhost  # Runs locally as we are targeting remote devices via the connection
  gather_facts: no
  connection: local

  vars:
    predefined_service_name: "KT_EPS044293T"  # Replace with your specific service name
    devices:
      - "172.18.3.13"
      - "172.18.1.40"

  tasks:
    - name: Retrieve interface descriptions from each device
      junipernetworks.junos.junos_command:
        commands:
          - show interfaces description | match "{{ predefined_service_name }}"
      register: interface_descriptions

    - name: Debug raw interface descriptions output
      ansible.builtin.debug:
        msg: "{{ interface_descriptions.results | map(attribute='stdout_lines') | list }}"

    - name: Extract interfaces related to predefined service
      set_fact:
        service_interfaces: >-
          {{
            interface_descriptions.results | selectattr('stdout_lines', 'defined') | 
            map(attribute='stdout_lines') | list | 
            flatten | 
            select('search', predefined_service_name) | 
            map('regex_findall', '^(\\S+)\\s+') | 
            map('first') | list
          }}
      when: interface_descriptions.results | length > 0

    - name: Fail if no interfaces are found for the predefined service
      fail:
        msg: "No interfaces found for the predefined service '{{ predefined_service_name }}'."
      when: service_interfaces is not defined or service_interfaces | length == 0

    - name: Show details for each found interface
      block:
        - name: Show interface details
          junipernetworks.junos.junos_command:
            commands:
              - show interfaces {{ item }}
          register: interface_details
          loop: "{{ service_interfaces }}"
          when: service_interfaces is defined and service_interfaces | length > 0

        - name: Show terse interface details
          junipernetworks.junos.junos_command:
            commands:
              - show interfaces {{ item }} terse
          register: terse_interface_details
          loop: "{{ service_interfaces }}"
          when: service_interfaces is defined and service_interfaces | length > 0

    - name: Display detailed output for each interface
      ansible.builtin.debug:
        msg: |
          Device: {{ inventory_hostname }}
          Interface: {{ item }}
          Detailed Output:
          {{ interface_details.results[loop.index0].stdout_lines | join('\n') }}
          Terse Output:
          {{ terse_interface_details.results[loop.index0].stdout_lines | join('\n') }}
      loop: "{{ service_interfaces }}"
      when: interface_details.results | length > 0 and terse_interface_details.results | length > 0
