- name: Retrieve specific interface from a Junos device and display device name
  hosts: all
  gather_facts: no
  connection: local

  vars:
    device_interface_map:
      "172.18.3.13":
        - interface: "ge-0/0/9.102"
          commands:
            - show system information
            - show bgp summary instance KT_EPS044293T
            - show route summary table KT_EPS044293T.inet.0
            - show route table KT_EPS044293T.inet.0 
      "172.18.1.40":
        - interface: "ge-0/0/9.102"
          commands:
            - show system information
            - show bgp summary instance KT_EPS044293T
            - show route summary table KT_EPS044293T.inet.0
            - show route table KT_EPS044293T.inet.0
      "192.168.75.116":
        - interface: "lt-1/1/0.104"
          commands:
            - show system information
            - show bgp summary instance KT_EPS044293T
            - show route summary table KT_EPS044293T.inet.0
            - show route table KT_EPS044293T.inet.0 
 
      "172.18.24.9":
        - interface: "lt-0/0/0.103"
          commands:
            - show system information
            - show bgp summary instance KT_EPS044293T
            - show route summary table KT_EPS044293T.inet.0
            - show route table KT_EPS044293T.inet.0 


  tasks:
    - name: Display inventory hostname
      debug:
        msg: "Inventory hostname: {{ inventory_hostname }}"


    - name: Check if the device is in the map
      set_fact:
        interface_info_list: "{{ device_interface_map[inventory_hostname] }}"
      when: inventory_hostname in device_interface_map


    - name: Run commands for each interface and aggregate results
      block:
        - name: Run commands for each interface
          loop: "{{ interface_info_list }}"
          vars:
            interface_info: "{{ item }}"
          junipernetworks.junos.junos_command:
            commands: "{{ interface_info.commands }}"
          register: command_outputs

        - name: Display the command output for each command
          loop: "{{ command_outputs.results }}"
          debug:
            var: item.stdout_lines
