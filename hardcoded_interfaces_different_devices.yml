---
- name: Retrieve specific interface from a Junos device and display device name
  hosts: all
  gather_facts: no
  connection: local

  vars:
    device_interface_map:
      "172.18.3.13": "ge-0/0/9.102"
      "172.18.1.40": "ge-0/0/9.102"

  tasks:
    - name: Display inventory hostname
      ansible.builtin.debug:
        msg: "Inventory hostname: {{ inventory_hostname }}"

    - name: Retrieve device hostname
      junipernetworks.junos.junos_command:
        commands:
          - show version | match Hostname
      register: device_info

    - name: Extract the device hostname from the output
      ansible.builtin.set_fact:
        device_hostname: "{{ (device_info.stdout_lines[0] | select('search', 'Hostname:') | list)[0].split(':')[-1] | trim }}"
      when: device_info.stdout_lines is defined and device_info.stdout_lines | length > 0

    - name: Display the device hostname
      ansible.builtin.debug:
        msg: "Device: {{ device_hostname }}"

    - name: Display device interface map
      ansible.builtin.debug:
        msg: "Device interface map: {{ device_interface_map }}"

    - name: Display ansible_host
      ansible.builtin.debug:
        msg: "Ansible host: {{ ansible_host }}"

    - name: Check if the device is in the map
      ansible.builtin.set_fact:
        interface_name: "{{ device_interface_map[ansible_host] }}"
      when: ansible_host in device_interface_map

    - name: Run 'show interfaces terse' command for the specific interface
      junipernetworks.junos.junos_command:
        commands:
          - show interfaces terse {{ interface_name }}
      register: command_output
      when: interface_name is defined

    - name: Flatten command output to a list of strings
      set_fact:
        flattened_output: "{{ command_output.stdout_lines | map('flatten') | list | join('\n') }}"
      when: command_output.stdout_lines is defined

    - name: Display formatted command output with proper newlines
      ansible.builtin.debug:
        msg: |
          Device: {{ device_hostname }}
          Interface: {{ interface_name }}
          Output:
          {{ flattened_output if command_output.stdout_lines is defined else 'No output' }}
      when: interface_name is defined
